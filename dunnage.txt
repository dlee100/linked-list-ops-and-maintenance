    def insertAfter1 (self, i, element): 
        # 'i' is the 'ith' element (int input), 'element' is the element itself to be inserted (str input)
        """Insert an element after the ith element of the list."""
        node = self._Node(element, None)
      # insert method body below
      # Cases: (1) insert into empty list, (2) insert before the head, (3) insert in the interior
        i = input(int)
        # Case 1: insert into empty list
        if self.isEmpty():
            self._head = node # element?
            # adds element to the empty list, making the element the head of the list. ***Case 1***
        else:
            cursor = self._i
            if i >= 0:
                cursor.setNext(node)
            else:
                self._head = node
        
            #pseudocode
            # if 'i' is selected: add element after the 'i' element of the list. ***Case 3***
            # else (if 'i' is not selected): add element before the head of the element. ***Case 2***

    def insertAfter2 (self, i, element):
        node = self._Node(element, None)
        if self.isEmpty():
            self._head = node
        else:
            cursor = self._head
            # while loops traverses through the linked list until it reaches the ith element.
            while cursor.getNext() is not i:
                cursor = cursor.getNext( )
                i+=1
            cursor.setNext(node)
        print('Adding # ', self._size, ' element: ', node.getElement())
        self._size += 1


        'IA,30,Squidward',
        'IA,50,Spongebob',
        'IA,2,Shuman',
        'IA,40,Kennedy',
        'IE,Nixon,A,LBJohnson',
        'IE,Eisenhower,B,Kennedy',
        'IE,Truman,B,Eisenhower'
        'IE,Hoover,B,FDRoosevelt',
        'IE,Wilson,B,Harding',
        'IE,Wilson,A,TRoosevelt',
        'IE,Taft,B,Wilson',
        'R',
        'R',
        'R',

        #SLL = SinglyLinkedList()
        #SLL.add('Washington')
        #SLL.add('Adams')
        #SLL.add('Jefferson')
        #SLL.add('Madison')

        #SLL.showList()


        while cursor: #loop until cursor is 'None', the list tail was reached.
                    if count == i:
                        cursor = cursor.getElement()
                        #return True
                    #cursor = cursor.setNext(node) #point to the next node by setting cursor to next.
                    count+=1
                self._size += 1


        if insrtHere not in node: # same function as add()
                while cursor.getNext() is not None:
                    #count+=1
                    cursor = cursor.getNext()
                cursor.setNext(node)
                print('Adding # ', self._size, ' element: ', node.getElement())
                self._size += 1
            el